
------------------------------------------------------------------------------
                                                                       *clamp()*
                           `clamp`({min}, {max}, {v})
Parameters ~
{min} `(number)`
{max} `(number)`
{v} `(number)`
Return ~
`(number)`

------------------------------------------------------------------------------
                                                     *evergarden.utils.set_hl()*
                  `evergarden.utils.set_hl`({group}, {colors})
Parameters ~
{group} `(string)`
{colors} evergarden.types.colorspec

------------------------------------------------------------------------------
                                             *evergarden.utils.set_highlights()*
                 `evergarden.utils.set_highlights`({hlgroups})
Parameters ~
{hlgroups} evergarden.types.hlgroups.OL

------------------------------------------------------------------------------
                                                 *evergarden.utils.is_reverse()*
                     `evergarden.utils.is_reverse`({style})
Parameters ~
{style} evergarden.types.styleopt
Return ~
`(integer)`

------------------------------------------------------------------------------
                                                 *evergarden.utils.vary_color()*
          `evergarden.utils.vary_color`({config}, {props}, {default})
T
Parameters ~
{config} evergarden.types.config
{props} { [evergarden.types.variant]: T }
{default} T
Return ~
T `(optional)`

------------------------------------------------------------------------------
                                               *evergarden.utils.vary_reverse()*
       `evergarden.utils.vary_reverse`({fg}, {bg}, {style}, {rfg}, {rbg})
T
Parameters ~
{fg} T
{bg} T
{style} evergarden.types.styleopt
{rfg} `(optional)` T
{rbg} `(optional)` T
Return ~
evergarden.types.colorspec

------------------------------------------------------------------------------
                                                                  *hex_to_rgb()*
                            `hex_to_rgb`({hex_str})
Parameters ~
{hex_str} `(string)` hexadecimal value of a color

------------------------------------------------------------------------------
                                                      *evergarden.utils.blend()*
                 `evergarden.utils.blend`({fg}, {bg}, {alpha})
adapted from @catppuccin/nvim https://github.com/catppuccin/nvim/blob/5b5e3aef9ad7af84f463d17b5479f06b87d5c429/lua/catppuccin/utils/colors.lua#L24
Parameters ~
{fg} `(string)`
{bg} `(string)`
{alpha} `(number)` amount of fg to mix in (0.0 is only bg)
Return ~
`(string)`

------------------------------------------------------------------------------
                                             *evergarden.utils.make_hl_loader()*
          `evergarden.utils.make_hl_loader`({hls}, {theme}, {config})
Parameters ~
{hls} evergarden.types.hlgroups.OL
{theme} evergarden.types.theme
{config} evergarden.types.config }
Return ~
`(fun(modbase: string, lst: string[]))`


 vim:tw=78:ts=8:noet:ft=help:norl: